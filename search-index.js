var searchIndex = {};
searchIndex["linear_map"] = {"doc":"A map implemented by searching linearly in a vector.","items":[[3,"LinearMap","linear_map","A map implemented by searching linearly in a vector.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `LinearMap`.",null,null],[3,"VacantEntry","","A view into a single vacant location in a `LinearMap`.",null,null],[3,"IntoIter","","A consuming iterator over a `LinearMap`.",null,null],[3,"Drain","","A draining iterator over a `LinearMap`.",null,null],[3,"Iter","","An iterator yielding references to a `LinearMap`&#39;s keys and their corresponding values.",null,null],[3,"IterMut","","An iterator yielding references to a `LinearMap`&#39;s keys and mutable references to their\ncorresponding values.",null,null],[3,"Keys","","An iterator yielding references to a `LinearMap`&#39;s keys in arbitrary order.",null,null],[3,"Values","","An iterator yielding references to a `LinearMap`&#39;s values in arbitrary order.",null,null],[4,"Entry","","A view into a single entry in a `LinearMap`.",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[11,"new","","Creates an empty map. This method does not allocate.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty map with the given initial capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",1,null],[11,"reserve","","Reserves capacity for at least `additional` more to be inserted in the\nmap. The collection may reserve more space to avoid frequent\nreallocations.",1,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elemnnts to\nbe inserted in the map.",1,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible.",1,null],[11,"len","","Returns the number of elements in the map.",1,null],[11,"is_empty","","Returns true if the map contains no elements.",1,null],[11,"clear","","Clears the map, removing all elements. Keeps the allocated memory for\nreuse.",1,null],[11,"drain","","Removes all key-value pairs from the map and returns an iterator that yields them in\narbitrary order.",1,null],[11,"iter","","Returns an iterator yielding references to the map&#39;s keys and their corresponding values in\narbitrary order.",1,null],[11,"iter_mut","","Returns an iterator yielding references to the map&#39;s keys and mutable references to their\ncorresponding values in arbitrary order.",1,null],[11,"keys","","Returns an iterator yielding references to the map&#39;s keys in arbitrary order.",1,null],[11,"values","","Returns an iterator yielding references to the map&#39;s values in arbitrary order.",1,null],[11,"get","","Returns a reference to the value in the map whose key is equal to the given key.",1,null],[11,"get_mut","","Returns a mutable reference to the value in the map whose key is equal to the given key.",1,null],[11,"contains_key","","Checks if the map contains a key that is equal to the given key.",1,null],[11,"insert","","Inserts a key-value pair into the map.",1,null],[11,"remove","","Removes the key in the map that is equal to the given key and returns its corresponding\nvalue.",1,null],[11,"entry","","Returns the given key&#39;s corresponding entry in the map for in-place manipulation.",1,null],[11,"clone","","",1,null],[11,"clone_from","","",1,null],[11,"fmt","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"extend","","",1,null],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"index","","",1,null],[11,"eq","","",1,null],[11,"into","","",1,null],[11,"or_insert","","Ensures that the entry is occupied by inserting the given value if it is vacant.",0,null],[11,"or_insert_with","","Ensures that the entry is occupied by inserting the the result of the given function if it\nis vacant.",0,null],[11,"get","","Returns a reference to the entry&#39;s value.",2,null],[11,"get_mut","","Returns a mutable reference to the entry&#39;s value.",2,null],[11,"into_mut","","Returns a mutable reference to the entry&#39;s value with the same lifetime as the map.",2,null],[11,"insert","","Replaces the entry&#39;s value with the given one and returns the previous value.",2,null],[11,"remove","","Removes the entry from the map and returns its value.",2,null],[11,"insert","","Inserts the entry into the map with the given value.",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"len","","",4,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"next_back","","",5,null],[11,"len","","",5,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[11,"len","","",6,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"len","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"len","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"len","","",9,null],[11,"clone","","",6,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"into_iter","","",1,null],[14,"linear_map!","","Creates a `LinearMap` from a list of key-value pairs.",null,null]],"paths":[[4,"Entry"],[3,"LinearMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"]]};
initSearch(searchIndex);
